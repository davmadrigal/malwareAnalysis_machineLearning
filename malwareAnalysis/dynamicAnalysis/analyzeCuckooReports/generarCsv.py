import os
import json
import csv
from natsort import natsorted

def read_features_file(file_path):
    """Read the features file and return a dictionary of characteristics."""
    characteristics = {}
    with open(file_path, 'r') as file:
        for line in file:
            line = line.strip()
            if line and ':' in line:
                key, value = line.split(': ', 1)
                if key in characteristics:
                    characteristics[key].append(value)
                else:
                    characteristics[key] = [value]
    return characteristics

def process_json_report(report_path, characteristics, directory_name):
    """Process the JSON report and extract relevant data."""
    results = []
    with open(report_path, 'r') as file:
        try:
            print("Report: ", os.path.dirname(report_path))
            content_json = json.load(file)

            name = content_json.get('target', {}).get('file', {}).get('name', '')
            sha256 = content_json.get('target', {}).get('file', {}).get('sha256', '')
            family = 0 if int(directory_name) < 8025 else 1

            results = [name, sha256, family]
            for key, values in characteristics.items():
                for value in values:
                    if key == 'apistats':
                        api_stats = content_json.get('behavior', {}).get('apistats', {})
                        found = any(value in v for v in api_stats.values())
                        results.append(1 if found else 0)
                    elif key == 'dropped':
                        found = any(value == item.get('filepath') for item in content_json.get('dropped', []))
                        results.append(1 if found else 0)
                    else:
                        summary = content_json.get('behavior', {}).get('summary', {})
                        if key in summary:
                            results.append(1 if value in summary[key] else 0)
                        else:
                            results.append(0)
            return results
        except json.JSONDecodeError:
            print(f'Error decoding JSON in {report_path}')
            return None

def generate_csv(base_path, features_file, output_file):
    """Generate a CSV file from the features and JSON reports."""
    characteristics = read_features_file(features_file)

    with open(output_file, 'w', newline='') as csvfile:
        csv_writer = csv.writer(csvfile)
        for directory_name in natsorted(os.listdir(base_path)):
            directory_path = os.path.join(base_path, directory_name)
            if os.path.isdir(directory_path) and directory_name.isdigit():
                report_path = os.path.join(directory_path, 'reports', 'report.json')
                if os.path.isfile(report_path):
                    results = process_json_report(report_path, characteristics, directory_name)
                    if results:
                        csv_writer.writerow(results)

# Base path where the analyses are located
base_path = '/home/daleal/.cuckoo/storage/analyses'
features_file = 'featuresPrueba.txt'
output_file = 'resultadosPrueba.csv'

generate_csv(base_path, features_file, output_file)

