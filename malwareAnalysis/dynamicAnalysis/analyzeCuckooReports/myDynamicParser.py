import json,itertools
import csv
import sys

def Remove_PC_Name(path_name):
    New_Path_Name=[]
    if 'test' in path_name:
        r_split=path_name.split("\\")
        for strings in r_split:
            if 'test' in strings:
                strings="guest"
            New_Path_Name.append(strings)
        New_Path_Name="\\".join(New_Path_Name)
        return New_Path_Name
    return path_name
   
def Remove_File_name_Reg(reg):
    if 'RASMANCS' in reg:
        r_split=reg.split("\\")
        new_reg=[]
        for m in r_split:
            if 'RASMANCS' in m:
                m='RASMANCS'
            new_reg.append(m)
        new_reg="\\".join(new_reg)
        return new_reg
    if 'RASAPI32' in reg:
        r_split=reg.split("\\")
        new_reg=[]
        for m in r_split:
            if 'RASAPI32' in m:
                m='RASAPI32'
            new_reg.append(m)
        new_reg="\\".join(new_reg)
        return new_reg
    return reg

def WriteDictToCSV(dict_data, csv_header, header):
    
    try:
        with open('Dataset.csv', 'a') as csvfile:
            print('Estoy en el writer');
            writer = csv.DictWriter(csvfile, fieldnames=csv_header)
            if int(header)==1:
                writer.writeheader()
            writer.writerow(dict_data)
    except IOError as err:
        errno, strerror = err.args
        print("I/O error({0}): {1}".format(errno, strerror))    
    return    
      
def Extract_Registry(Resource,Resources_header, data , file_list ):
    file_name=file_list
    for name in file_name:
        if name == 'apistats':
            if 'behavior' in data:
                if 'apistats' in data['behavior']:
                    for m in data['behavior']['apistats']:
                        # there are some number in json parsing therefore pid is initilize
                        pid=m
                        api_data=data['behavior']['apistats'][pid]
                    for api in api_data:
                        if str(name)+"_"+api in Resources_header.keys():
                            print("AKI ANDOOOO", api)
                            Resource[Resources_header["apistats_"+api]]=1

        elif name is 'dropped':
            if 'metadata' in data:
                if 'output' in data['metadata']:
                    for m in data['metadata']['output']:
                        if 'dropped' in m:
                            c=0
                            for drop_name in data['metadata']['output']['dropped']:
                                if 'basename' in drop_name:
                                    for m in drop_name:
                                        basename=data['metadata']['output']['dropped'][c]['basename']
                                        if 'virusshare' not in basename:
                                            r_split=basename.rsplit('.')
                                            if "dropped_"+str(r_split[-1]) in Resources_header.keys():
                                               Resource[Resources_header["dropped_"+str(r_split[-1])]]=1

                                c+=1                   
        elif name.startswith('ext'):
            if 'behavior' in data:
                if 'summary' in data['behavior']:
                    for m in data['behavior']['summary']:
                        if str(name[3:]) in m:
                            for key in data["behavior"]['summary'][str(name[3:])]:
                                key=Remove_PC_Name(key)
                                r_split=key.rsplit('.')
                                if 'VirusShare' not in r_split[-1]:
                                    if str(name)+"_" + r_split[-1] in Resources_header.keys():
                                        Resource[Resources_header[str(name)+"_"+r_split[-1]]]=1
        else: 
            if 'behavior' in data:
                if 'summary' in data['behavior']:
                    for m in data['behavior']['summary']:
                        if str(name) in m:
                            for reg_key in data["behavior"]['summary'][str(name)]:
                                reg_key=Remove_File_name_Reg(reg_key)
                                reg_key=Remove_PC_Name(reg_key)
                                if str(name)+"_"+reg_key in Resources_header.keys():
                                    Resource[Resources_header[str(name)+"_"+reg_key]]=1
    
if __name__ == '__main__':
    
    Resource= {}
    Resources_header={}
    file_name=['regkey_opened','regkey_read','regkey_written',
               'file_opened','file_read','extfile_opened','extfile_read','extfile_created',
               'directory_created','dll_loaded','apistats','network','dropped','strings']
                             
    stop =sum(1 for line in open('features.txt'))
    feature = open("features.txt","r",encoding="utf-8")
    for ind in itertools.islice(feature , stop):
        fields = ind.split(':', 1)
        Resources_header[fields[1].strip()] = fields[0]
    feature.close()
    Resource = dict.fromkeys(Resources_header.values(),0)
    Resource[Resources_header['Label']]='label'
    Resource[Resources_header['Ransomware_Family']]="Un known"
    print(Resource)
    print("-------------------")
    print(Resources_header)
   # sys.exit(1)
    report = open("report2.json", "r", encoding="utf-8")
    report_json = json.load(report)
    Extract_Registry(Resource, Resources_header, report_json, file_name)
#    print("     Dynamic FEATURE PARSER on Sample.json\n\n ")
    
    for k,v in Resources_header.items():
        print(k,"  :  ",Resource[str(v)])
        
    WriteDictToCSV(Resource, Resources_header.values(), 2)

